services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27018:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s 
      timeout: 5s   
      retries: 5    
      start_period: 30s 
  next-app:
    build:
      context: ./next-app
      dockerfile: DockerFile
    volumes:
      - ./next-app:/next-app
      - /next-app/node_modules
    depends_on: 
      mongo:
        condition: service_healthy 
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/MotorDeBusca?authSource=admin
    ports:
      - "3000:3000"
    networks:
      - app-network
    command: npm run dev

  scrapers:
    build: ./scrapers
    container_name: scrapers
    depends_on: 
      mongo:
        condition: service_healthy 
    volumes:
      - ./scrapers:/app
    networks:
      - app-network

networks:
  app-network:
    name: pi-motor-de-busca-4-sem_app-network
    driver: bridge

volumes:
  mongo-data:
    name: pi-motor-de-busca-4-sem_mongo-data